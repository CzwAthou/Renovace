/*
 * Copyright (c) 2016  athou（cai353974361@163.com）.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.library'
apply plugin: 'com.novoda.bintray-release'//添加

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion

        versionCode 3
        versionName "1.2.2"
    }
    buildTypes {
        release {
            minifyEnabled false
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    //RX
    compile rootProject.ext.dependencies["rxjava"]
    compile rootProject.ext.dependencies["rxandroid"]
    //retrofit
    compile rootProject.ext.dependencies["retrofit"]
    compile rootProject.ext.dependencies["retrofit-gson"]
    compile rootProject.ext.dependencies["retrofit-adapter"]
    //okhttp
    compile rootProject.ext.dependencies["okhttp"]
    compile rootProject.ext.dependencies["okhttplog-interceptor"]
}

//添加
publish {
    userOrg = 'czwathou'//bintray.com用户名
    groupId = 'com.hyman'//jcenter上的路径
    artifactId = 'renovace'//项目名称
    publishVersion = '1.2.2'//版本号
    desc = 'A http library base on Retrofit and Rxjava '//描述，不重要
    website = 'https://github.com/hyman/basetools'//网站，不重要；尽量模拟github上的地址，例如我这样的；当然你有地址最好了
}

task clearJar(type: Delete) {
    delete 'build/outputs/yourname.jar'
}

task makeJar(type: Copy) {
    from('build/intermediates/bundles/release/')
    into('build/outputs/')
    include('classes.jar')
    rename ('classes.jar', 'yourname.jar')
}

makeJar.dependsOn(clearJar, build)
